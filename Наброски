// черновик для задачи с records

// сортировка
for (int i = 0; i < students.Length - 1; i++)
            {
                for (int j = i + 1; j < students.Length; j++)
                {
                    if (students[i].marks.Average() > students[j].marks.Average())
                    {
                        Student temp = students[i];
                        students[i] = students[j];
                        students[j] = temp;
                    }
                }
            }
// выбор только студентов с положительными отметками

foreach (Student item in students)
            {
                if (!item.marks.Contains(2) && !item.marks.Contains(3))
                {
                    Console.WriteLine(item.name + " " + item.group);
                }
            }



public static void FormWaybill(List<Product> data)
        {
            Dictionary<string, List<Product>> compliances = new Dictionary<string, List<Product>>();
            HashSet<DateTime> dates = new HashSet<DateTime>();

            foreach(Product item in data)
            {
                dates.Add(item.DateOfReceive);
                if (compliances.ContainsKey(item.ReceiverName))
                {
                    compliances[item.ReceiverName].Add(item);
                }
                else
                {
                    compliances.Add(item.ReceiverName, new List<Product>());
                }
            }

            List<Product> _unique = new List<Product>();

            foreach(var item in compliances)
            {
                foreach(var date in dates)
                {
                    foreach(var product in data)
                    {
                        if(product.ReceiverName == item.Key && product.DateOfReceive == date)
                        {
                            _unique.Add(product);
                        }
                    }
                    WriteWaybill(_unique);
                    _unique.Clear();
                }
            }                                
        }
        public static void WriteWaybill(List<Product> temp)
        {

        }



// db code

using(var context = new ApplicationContext())
            {
                var student1 = new Student { Name = "Ivan", Surname = "Ivanov", Age = 20 };
                var student2 = new Student { Name = "Maria", Surname = "Smirnova", Age = 21 };

                context.Students.Add(student1);
                context.Students.Add(student2);

                context.SaveChanges();

                Console.WriteLine("Студенты успешно добавлены в базу данных");
            }
